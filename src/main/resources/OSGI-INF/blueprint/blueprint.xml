<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd        http://camel.apache.org/schema/blueprint https://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder
        id="property-placeholder-a1f407c4-cf02-4655-b1aa-40137850978f"
        persistent-id="test" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="X_LOGLAAG_TEST_OFFRAMP" value="test.offramp"/>
            <cm:property name="X_LOGLAAG_TEST_ONRAMP" value="test.onramp"/>
            <cm:property name="TEST_EXIT_ENDPOINT" value="activemq:q.test.exit"/>
            <cm:property name="log-body" value="true"/>
        </cm:default-properties>
    </cm:property-placeholder>
    <!-- BEGIN : Configuring the ActiveMQ components -->
    <bean
        class="org.apache.activemq.camel.component.ActiveMQConfiguration" id="jmsConfig">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
        <property name="transacted" value="true"/>
        <property name="concurrentConsumers" value="10"/>
        <property name="cacheLevelName" value="CACHE_CONSUMER"/>
        <property name="requestTimeout" value="20"/>
    </bean>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq">
        <argument ref="jmsConfig"/>
    </bean>
    <reference id="pooledConnectionFactory" interface="javax.jms.ConnectionFactory"/>
    <!-- END : Configuring the ActiveMQ components -->
    <bean class="org.apache.activemq.util.InetAddressUtil" id="InetAddressUtil"/>
    <!-- Jasypt config -->
    <bean
        class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig" id="environmentVariablesConfiguration">
        <property name="algorithm" value="PBEWithMD5AndDES"/>
        <property name="passwordEnvName" value="JASYPT_ENCRYPTION_PASSWORD"/>
    </bean>
    <bean class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor" id="configurationEncryptor">
        <property name="config" ref="environmentVariablesConfiguration"/>
    </bean>
    <!-- END Jasypt config -->
    <!-- Exception handling en dlq -->
    <bean class="org.apache.camel.builder.DeadLetterChannelBuilder" id="exceptionHandler">
        <property name="deadLetterUri" value="activemq:q.exceptionlog?disableReplyTo=true"/>
    </bean>
    <!-- END: Exception handling en dlq -->
    <camelContext errorHandlerRef="exceptionHandler" id="esb-test-context"
        trace="false" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="test.entry">           
            <from id="_from1" uri="activemq:q.test.entry"/>
            <setHeader headerName="X_DSB_DSBLAAG" id="_setHeader3">
                <simple>{{X_LOGLAAG_TEST_ONRAMP}}</simple>
            </setHeader>
            <wireTap id="_wireTap1" uri="direct:log-message"/>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${header.SERVICE} == 'service:test1'</simple>
                    <to id="_to1" uri="activemq:q.test1.exit"/>
                </when>
                <!-- oude versie -->
                <when id="_when3">
                    <simple>${header.X_SERVICE} == 'service:test2'</simple>
                    <to id="_to6" uri="activemq:q.test2.exit"/>
                </when>                
                <when id="_when2">
                    <simple>${header.X_SERVICE} == 'service:test3'</simple>                    
                    <to id="_to2" uri="{{TEST_EXIT_ENDPOINT}}"/>                    
                </when>                
                <otherwise id="_otherwise1">
                    <to id="_to3" uri="activemq:q.test.unroutable"/>
                </otherwise>
            </choice>
        </route>       
        <route id="log-message">
            <from id="_from1" uri="direct:log-message">
                <description/>
            </from>            
            <setHeader headerName="X_TIME_SEND" id="_setHeader4">
                <simple>${date:now:yyyy-MM-dd'T'HH:mm:ss.SSSZZ}</simple>
            </setHeader>
            <setHeader headerName="log-body" id="setLogBody1">
                <simple>{{log-body}}</simple>
            </setHeader>
            <convertBodyTo id="_convertBodyTo2" type="java.lang.String"/>
            <to id="_to7" uri="activemq:q.logging?jmsMessageType=Bytes&amp;disableReplyTo=true"/>
        </route>
    </camelContext>
</blueprint>
